import{_ as e,o as s,c as a,e as n}from"../app.1a6ffc41.js";const b=JSON.parse('{"title":"Directory","description":"","frontmatter":{},"headers":[{"level":2,"title":"Development","slug":"development","link":"#development","children":[{"level":3,"title":"Install and run","slug":"install-and-run","link":"#install-and-run","children":[]},{"level":3,"title":"Other commands","slug":"other-commands","link":"#other-commands","children":[]},{"level":3,"title":"Support Vue2 and Vue3","slug":"support-vue2-and-vue3","link":"#support-vue2-and-vue3","children":[]}]},{"level":2,"title":"Build","slug":"build","link":"#build","children":[]},{"level":2,"title":"Publish","slug":"publish","link":"#publish","children":[]},{"level":2,"title":"Deploy docs","slug":"deploy-docs","link":"#deploy-docs","children":[]}],"relativePath":"../README.md"}'),l={name:"../README.md"},o=n(`<div align="center"><h3>ViteLibStarter</h3><span>A template for building Vue components library</span><br><a href="https://soullyoko.github.io/vite-lib-starter/">Docs</a></div><h1 id="directory" tabindex="-1">Directory <a class="header-anchor" href="#directory" aria-hidden="true">#</a></h1><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">\u251C\u2500\u2500 .github         </span><span style="color:#676E95;"># github workflows</span></span>
<span class="line"><span style="color:#A6ACCD;">\u251C\u2500\u2500 .husky          </span><span style="color:#676E95;"># git hooks</span></span>
<span class="line"><span style="color:#A6ACCD;">\u251C\u2500\u2500 packages        </span><span style="color:#676E95;"># lib source</span></span>
<span class="line"><span style="color:#A6ACCD;">\u251C\u2500\u2500 scripts         </span><span style="color:#676E95;"># command scripts</span></span>
<span class="line"><span style="color:#A6ACCD;">\u251C\u2500\u2500 src             </span><span style="color:#676E95;"># dev source</span></span>
<span class="line"></span></code></pre></div><h1 id="features" tabindex="-1">Features <a class="header-anchor" href="#features" aria-hidden="true">#</a></h1><ul><li>Support Vue2 and Vue3 with <a href="https://github.com/vueuse/vue-demi" target="_blank" rel="noreferrer">VueDemi</a></li><li>Develop and build with <a href="https://cn.vitejs.dev/" target="_blank" rel="noreferrer">Vite</a></li><li>Unit Testing with <a href="https://cn.vitest.dev/" target="_blank" rel="noreferrer">Vitest</a></li><li>Docs with <a href="https://vitejs.cn/vitepress/" target="_blank" rel="noreferrer">VitePress</a></li><li>Auto CI, Deploy, Publish with GitHub Actions</li></ul><h1 id="try-it" tabindex="-1">Try it <a class="header-anchor" href="#try-it" aria-hidden="true">#</a></h1><ul><li>Use this template</li><li>Clear <code>CHANGELOG.md</code></li><li>Replace author name in LICENSE file</li><li>Global replace <code>vite-lib-starter</code> and <code>ViteLibStarter</code> to your own library name</li><li>Generate your github personal access token on <a href="https://github.com/settings/tokens" target="_blank" rel="noreferrer">https://github.com/settings/tokens</a> (skip if you already have)</li><li>Add your github personal access token named <code>ACCESS_TOKEN</code> (or any other name, it corresponds to <code>.github/workflows/deploy.yml#L21</code>) to your repo <code>Setting&gt;Secrets&gt;Actions</code></li><li>Generate your npm access token (skip if you already have)</li><li>Add your npm access token named <code>NPM_TOKEN</code> (or any other name, it corresponds to <code>.github/workflows/publish.yml#L21</code>) to your repo <code>Setting&gt;Secrets&gt;Actions</code></li></ul><h1 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-hidden="true">#</a></h1><h2 id="development" tabindex="-1">Development <a class="header-anchor" href="#development" aria-hidden="true">#</a></h2><h3 id="install-and-run" tabindex="-1">Install and run <a class="header-anchor" href="#install-and-run" aria-hidden="true">#</a></h3><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">yarn</span></span>
<span class="line"><span style="color:#A6ACCD;">yarn dev</span></span>
<span class="line"></span></code></pre></div><h3 id="other-commands" tabindex="-1">Other commands <a class="header-anchor" href="#other-commands" aria-hidden="true">#</a></h3><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">yarn dev </span><span style="color:#676E95;"># dev on vue3</span></span>
<span class="line"><span style="color:#A6ACCD;">yarn dev:2 </span><span style="color:#676E95;"># dev on vue2</span></span>
<span class="line"><span style="color:#A6ACCD;">yarn docs:dev </span><span style="color:#676E95;"># dev docs</span></span>
<span class="line"><span style="color:#A6ACCD;">yarn </span><span style="color:#82AAFF;">test</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;"># test on vue3 in watch mode</span></span>
<span class="line"><span style="color:#A6ACCD;">yarn test:2 </span><span style="color:#676E95;"># test on vue2 without watch</span></span>
<span class="line"><span style="color:#A6ACCD;">yarn test:3 </span><span style="color:#676E95;"># test on vue3 without watch</span></span>
<span class="line"><span style="color:#A6ACCD;">yarn test:all </span><span style="color:#676E95;"># test both of vue2 and vue3 without watch</span></span>
<span class="line"><span style="color:#A6ACCD;">yarn test:coverage </span><span style="color:#676E95;"># use c8 for coverage</span></span>
<span class="line"><span style="color:#A6ACCD;">yarn switch:2 </span><span style="color:#676E95;"># switch packages and vue-demi to vue2</span></span>
<span class="line"><span style="color:#A6ACCD;">yarn switch:3 </span><span style="color:#676E95;"># switch packages and vue-demi to vue3</span></span>
<span class="line"><span style="color:#A6ACCD;">yarn release </span><span style="color:#676E95;"># release by choicing a version</span></span>
<span class="line"><span style="color:#A6ACCD;">yarn typecheck </span><span style="color:#676E95;"># run vue-tsc with noEmit</span></span>
<span class="line"><span style="color:#A6ACCD;">yarn changelog </span><span style="color:#676E95;"># generate changelog</span></span>
<span class="line"><span style="color:#A6ACCD;">yarn ci </span><span style="color:#676E95;"># ci</span></span>
<span class="line"></span></code></pre></div><h3 id="support-vue2-and-vue3" tabindex="-1">Support Vue2 and Vue3 <a class="header-anchor" href="#support-vue2-and-vue3" aria-hidden="true">#</a></h3><p>Examples: see <code>packages/components</code></p><p>Do not use SFC(.vue) files, just use the function <code>h()</code> (encapsulated by h-demi) in <code>.ts</code> files, no jsx of course.</p><p>Don&#39;t forget to add <code>value,modelValue</code> to props options and add <code>input,update:modelValue</code> to emits options at the same time.</p><h2 id="build" tabindex="-1">Build <a class="header-anchor" href="#build" aria-hidden="true">#</a></h2><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">yarn build</span></span>
<span class="line"></span></code></pre></div><h2 id="publish" tabindex="-1">Publish <a class="header-anchor" href="#publish" aria-hidden="true">#</a></h2><p>Automatic publish to npm using <code>.github/workflows/publish.yml</code>, after running <code>yarn release</code> and push to origin.</p><p>If you want to publish manually, remove <code>publish.yml</code> and run</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">yarn release</span></span>
<span class="line"><span style="color:#A6ACCD;">yarn build</span></span>
<span class="line"><span style="color:#A6ACCD;">npm publish</span></span>
<span class="line"></span></code></pre></div><h2 id="deploy-docs" tabindex="-1">Deploy docs <a class="header-anchor" href="#deploy-docs" aria-hidden="true">#</a></h2><p>Automatic deployment to gh-pages using <code>.github/workflows/deploy.yml</code>.</p><p>If you want to deploy manually, remove <code>deploy.yml</code> and run</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">yarn docs:build </span><span style="color:#676E95;"># packages/.vitepress/dist</span></span>
<span class="line"></span></code></pre></div>`,27),t=[o];function p(r,i,c,d,h,u){return s(),a("div",null,t)}const g=e(l,[["render",p]]);export{b as __pageData,g as default};
